apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        debug {
            // Run code coverage reports by default on debug builds.
            // testCoverageEnabled = true
        }

        release {
            minifyEnabled true
            proguardFile 'proguard-project-app.pro'
            proguardFile getDefaultProguardFile('proguard-android.txt')
            testProguardFile 'proguard-project-test.pro'
        }
    }

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    sourceSets {
        mock { java.srcDirs = ['src/mock/java', 'src/mock/java/'] }
        prod { java.srcDirs = ['src/prod/java', 'src/prod/java/'] }
    }
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.5.2'
    }
}

dependencies {
    // App's dependencies, including test
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espressoVersion"

    //dagger
    apt "com.google.dagger:dagger-compiler:$rootProject.aptVersion"
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    provided "javax.annotation:jsr250-api:$rootProject.javaxAnnotationVersion"

    //google support library
    compile 'com.google.android.gms:play-services-gcm:8.4.0' //google cloud messaging
//    compile 'com.google.android.gms:play-services-location:9.0.0' //google location
//    compile 'com.google.android.gms:play-services-analytics:9.0.0' // google analytics

    //retrofit
    compile "com.google.code.gson:gson:$rootProject.gsonVersion"
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitConvertorVersion"
    compile "com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion"
    mockCompile 'com.squareup.okhttp3:logging-interceptor:3.2.0'

    //butterknife
    compile 'com.jakewharton:butterknife:8.0.1'
    apt 'com.jakewharton:butterknife-compiler:8.0.1'

    //stetho
    mockCompile 'com.facebook.stetho:stetho:1.3.1'
    mockCompile 'com.uphyca:stetho_realm:0.9.0'
    mockCompile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
    mockCompile 'com.facebook.stetho:stetho-urlconnection:1.3.1'

    //priority job queue
    compile 'com.birbit:android-priority-jobqueue:2.0.0-alpha2'

    // Dependencies for local unit tests
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
    testCompile "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
    testCompile "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"
    testCompile 'io.reactivex:rxjava:1.1.0'
    androidTestCompile 'io.reactivex:rxjava:1.1.0'

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.ext.runnerVersion"

    // Espresso UI Testing dependencies.
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
}

configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}